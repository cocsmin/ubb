CREATE DATABASE GLOVO;
GO

USE GLOVO;
GO

CREATE TABLE CURIER(
    ID_CUR INT PRIMARY KEY IDENTITY,
    NUME VARCHAR(50),
    PRENUME VARCHAR(50),
    EMAIL VARCHAR(50),
)

CREATE TABLE MENIU(
    ID_MENIU INT PRIMARY KEY IDENTITY,
    NR_PAGINI INT,
)

CREATE TABLE BAUTURI(
    ID_BAUTURA INT PRIMARY KEY IDENTITY,
    ID_MENIU INT FOREIGN KEY REFERENCES MENIU(ID_MENIU),
    DENUMIRE VARCHAR(50),
    CANTITATE INT,
    PRET FLOAT,
)

CREATE TABLE MANCARE(
    ID_MANCARE INT PRIMARY KEY IDENTITY,
    ID_MENIU INT FOREIGN KEY REFERENCES MENIU(ID_MENIU),
    DENUMIRE VARCHAR(50),
    CANTITATE INT,
    PRET FLOAT,
)

CREATE TABLE MENIU_ALC(
    ID_MEN_ALC INT PRIMARY KEY IDENTITY,
    DENUMIRE VARCHAR(50),
    PROCENTAJ_ALC INT,
    CANTITATE INT,
    PRET FLOAT,
)

CREATE TABLE RESTAURANT(
    ID_RES INT PRIMARY KEY IDENTITY,
    NUME_RES VARCHAR(50),
    ID_MENIU INT FOREIGN KEY REFERENCES MENIU(ID_MENIU),
    ID_MEN_ALC INT FOREIGN KEY REFERENCES MENIU_ALC(ID_MEN_ALC),
)

CREATE TABLE ADRESA(
    ID_ADR INT PRIMARY KEY IDENTITY,
    TARA VARCHAR(50),
    STRADA VARCHAR(50),
    BLOC VARCHAR(50),
    APARTAMENT INT,
)

CREATE TABLE CARD(
    ID_CARD INT PRIMARY KEY IDENTITY,
    NUMAR_CARD VARCHAR(50),
    TIP_CARD VARCHAR(50),
    DATA_EXP DATE,
)

CREATE TABLE CLIENT(
    ID_CL INT PRIMARY KEY IDENTITY,
    NUME VARCHAR(50),
    PRENUME VARCHAR(50),
    EMAIL VARCHAR(50),
    ID_ADR INT FOREIGN KEY REFERENCES ADRESA(ID_ADR),
)

CREATE TABLE PLATA(
    ID_CL INT FOREIGN KEY REFERENCES CLIENT(ID_CL),
    ID_CARD INT FOREIGN KEY REFERENCES CARD(ID_CARD),
    CONSTRAINT PK_PLATA PRIMARY KEY (ID_CL, ID_CARD)
)

CREATE TABLE COMANDA(
    ID_COMANDA INT PRIMARY KEY IDENTITY,
    ID_CL INT FOREIGN KEY REFERENCES CLIENT(ID_CL),
    ID_RES INT FOREIGN KEY REFERENCES RESTAURANT(ID_RES),
    ID_CUR INT FOREIGN KEY REFERENCES CURIER(ID_CUR),
    DENUMIRE VARCHAR(50),
    TIMP_LIVRARE FLOAT,
)

CREATE TABLE PRODUSE(
    ID_COM INT FOREIGN KEY REFERENCES COMANDA(ID_COMANDA),
    ID_RES INT FOREIGN KEY REFERENCES RESTAURANT(ID_RES),
    CONSTRAINT PK_PRODUSE PRIMARY KEY(ID_COM, ID_RES),
)  
ALTER TABLE PRODUSE
ADD CONSTRAINT PK_Produse PRIMARY KEY (ID_COM, ID_RES);

INSERT INTO ADRESA(TARA, STRADA, BLOC, APARTAMENT)
VALUES
('ROMANIA', 'FABRICII', 'TC76', 38),
('ROMANIA', 'DAMBOVITEI', '49', 18),
('ROMANIA', 'DUNARII', 'B24', 3),
('ROMANIA', 'TULCEA', 'A69', 42);

INSERT INTO CLIENT(NUME, PRENUME, EMAIL, ID_ADR)
VALUES
('SECRIER', 'COSMIN', 'csecrier@yahoo.com', 1),
('RACZ', 'ALEXANDRA', 'alevaleracz@yahoo.com', 2),
('FRONE', 'GIGEL', 'gigiregele@yahoo.com', 3),
('IOHANNIS', 'KLAUS', 'jurcanufur@gmail.com', 4);

INSERT INTO CARD(NUMAR_CARD, TIP_CARD, DATA_EXP)
VALUES
('41401234', 'VISA', '2025-08-18'),
('12345678', 'MASTERCARD', '2069-06-09'),
('87654321', 'MASTERCARD', '2025-07-17'),
('69696969', 'VISA', '2025-01-17'),
('42042069', 'MASTERCARD', '2025-03-01'),
('17070404', 'VISA', '2026-05-03');

SELECT * FROM CARD

INSERT INTO PLATA(ID_CL, ID_CARD)
VALUES
(1, 4),
(2, 5),
(3, 3),
(4, 6);

INSERT INTO CURIER(NUME, PRENUME, EMAIL)
VALUES
('PUSCAS', 'RAUL', 'puscar@hotmail.com'),
('SASARAN', 'AURELIAN', 'danimocanurealul@yahoo.com'),
('BERINDE', 'STEFAN', 'stefanberinde@gmail.com'),
('MIRCEA', 'IOAN-GABRIEL', 'domnprofesor1@yahoo.com');

INSERT INTO MENIU(NR_PAGINI)
VALUES
(15),
(25),
(17),
(6);

SELECT * FROM MENIU

INSERT INTO MANCARE(ID_MENIU, DENUMIRE, CANTITATE, PRET)
VALUES
(1, 'PIZZA CANNIBALE', 2, 40),
(1, 'PIZZA QUATRO STAGIONI', 1, 35),
(2, 'MENIU CRISPY PICANT', 1, 39),
(2, 'WRAP PICANT DE PUI', 3, 29),
(2, 'BURGER AMERICAN', 1, 39),
(3, 'CLATITE CU NUTELLA', 1, 15),
(3, 'AMERICAN SPARKLY PANCAKES', 2, 27),
(4, 'SANDWICH URBAN', 1, 30),
(4, 'PUI LA ROTISOR', 1, 20);

INSERT INTO BAUTURI(ID_MENIU, DENUMIRE, CANTITATE, PRET)
VALUES
(1, 'FANTA', 1, 5),
(1, 'COCA COLA ZERO', 3, 5),
(2, 'SCHWEPPES', 1, 10),
(2, 'PRIME', 1, 15),
(2, 'PEPSI', 1, 6),
(3, 'SPRITE', 1, 5),
(3, 'CIOCOLATA CALDA', 2, 10),
(4, 'TIMBARK', 2, 7),
(4, 'MONSTER', 1, 9);

INSERT INTO MENIU_ALC(DENUMIRE, PROCENTAJ_ALC, CANTITATE, PRET)
VALUES
('BERE LA HALBA', 8, 1, 15),
('VIN LA PAHAR MARE', 15, 3, 20),
('SAMPANIE', 12, 1, 40),
('COCKTAILS', 10, 1, 30);

SELECT * FROM MENIU_ALC

INSERT INTO RESTAURANT(NUME_RES, ID_MENIU, ID_MEN_ALC)
VALUES
('PIZZERO', 1, 2),
('LONDON BROTHERS', 2, 1),
('DULCELLO', 3, 4),
('OOPS', 4, 3);

INSERT INTO COMANDA(ID_CL, ID_RES, ID_CUR, DENUMIRE, TIMP_LIVRARE)
VALUES
(1, 2, 3, 'WRAP PICANT DE PUI', 50),
(2, 3, 4, 'AMERICAN SPARKLY PANCAKES', 25),
(3, 1, 2, 'PIZZA CANNIBALE', 20),
(4, 4, 1, 'PUI LA ROTISOR', 90);

INSERT INTO PRODUSE
VALUES
(1, 2),
(2, 3),
(3, 1),
(4, 4);

-- m-n
-->2 tabele
-- where
-- cati clienti folosesc carduri VISA
SELECT COUNT(*) AS VISA_USERS
FROM CLIENT
INNER JOIN PLATA ON CLIENT.ID_CL = PLATA.ID_CL
INNER JOIN CARD ON CARD.ID_CARD = PLATA.ID_CARD
WHERE CARD.TIP_CARD = 'VISA';

-- m-n
-->2 tabele
-- group by
-- where
-- tipurile de carduri folosite care au data de expirare in 2025
SELECT CARD.TIP_CARD, COUNT(*) as Numar
FROM CARD
INNER JOIN PLATA ON PLATA.ID_CARD = CARD.ID_CARD
INNER JOIN CLIENT ON CLIENT.ID_CL = PLATA.ID_CL
WHERE CARD.DATA_EXP BETWEEN '2025-01-01' AND '2025-12-31'
GROUP BY CARD.TIP_CARD;

-- distinct
-- where
-- comenzile care dureaza mai mult de 50 de min
SELECT DISTINCT C.TIMP_LIVRARE, C.ID_COMANDA
FROM COMANDA C
WHERE C.TIMP_LIVRARE > 50;

-- group by
-- having
-->2 tabele
-- lista comenzilor pt fiecare restaurant care au cel putin o comanda
SELECT R.NUME_RES, COUNT(C.ID_COMANDA) AS NR_COMENZI
FROM COMANDA C
INNER JOIN PRODUSE P ON P.ID_COM = C.ID_COMANDA
INNER JOIN RESTAURANT R ON R.ID_RES = P.ID_RES
GROUP BY R.NUME_RES
HAVING COUNT(C.ID_COMANDA) > 0;

--group by
--having
-->2 tabele
--numaru de bauturi de pe fiecare meniu unde media pretului e mai mare ca 7
SELECT MENIU.ID_MENIU, COUNT(BAUTURI.ID_BAUTURA) AS NR_BAUTURI
FROM BAUTURI 
INNER JOIN MENIU ON BAUTURI.ID_MENIU = MENIU.ID_MENIU
GROUP BY MENIU.ID_MENIU
HAVING AVG(BAUTURI.PRET) > 7;

--where
-->2 tabele
--curierii care i-au livrat lu Iohannis de la Oops
SELECT CURIER.NUME, CURIER.PRENUME 
FROM CURIER
INNER JOIN COMANDA ON COMANDA.ID_CUR = CURIER.ID_CUR
INNER JOIN CLIENT ON CLIENT.ID_CL = COMANDA.ID_CL
INNER JOIN RESTAURANT ON RESTAURANT.ID_RES = COMANDA.ID_RES
WHERE CLIENT.NUME = 'IOHANNIS' AND CLIENT.PRENUME = 'KLAUS' AND RESTAURANT.NUME_RES = 'OOPS';

--distinct
-->2 tabele
--clientii care au comandat bauturi alcoolice
SELECT DISTINCT CLIENT.NUME, CLIENT.PRENUME
FROM CLIENT
INNER JOIN COMANDA ON COMANDA.ID_CL = CLIENT.ID_CL
INNER JOIN PRODUSE ON PRODUSE.ID_COM = COMANDA.ID_COMANDA
INNER JOIN RESTAURANT ON RESTAURANT.ID_RES = PRODUSE.ID_RES
INNER JOIN MENIU_ALC ON RESTAURANT.ID_MEN_ALC = MENIU_ALC.ID_MEN_ALC;

--where
-->2 tabele
--clientii care au comandat de la PIZZERO si au platit cu MASTERCARD
SELECT CLIENT.NUME, CLIENT.PRENUME, RESTAURANT.NUME_RES, CARD.TIP_CARD
FROM CLIENT
INNER JOIN COMANDA ON COMANDA.ID_CL = CLIENT.ID_CL
INNER JOIN RESTAURANT ON RESTAURANT.ID_RES = COMANDA.ID_RES
INNER JOIN PLATA ON PLATA.ID_CL = CLIENT.ID_CL
INNER JOIN CARD ON PLATA.ID_CARD = CARD.ID_CARD
WHERE RESTAURANT.NUME_RES = 'PIZZERO' AND CARD.TIP_CARD = 'MASTERCARD';

--where
-->2 tabele
--mancarurile de la LONDON BROTHERS care costa mai mult de 35 de lei
SELECT MANCARE.DENUMIRE, MANCARE.PRET
FROM MANCARE
INNER JOIN MENIU ON MENIU.ID_MENIU = MANCARE.ID_MENIU
INNER JOIN RESTAURANT ON RESTAURANT.ID_MENIU = MENIU.ID_MENIU
WHERE RESTAURANT.NUME_RES = 'LONDON BROTHERS' AND MANCARE.PRET > 35;

--toate comenzile livrate de RAUL PUSCAS
SELECT CURIER.NUME, CURIER.PRENUME, COMANDA.ID_COMANDA
FROM CURIER
INNER JOIN COMANDA ON COMANDA.ID_CUR = CURIER.ID_CUR
WHERE CURIER.NUME = 'PUSCAS' AND CURIER.PRENUME = 'RAUL';

