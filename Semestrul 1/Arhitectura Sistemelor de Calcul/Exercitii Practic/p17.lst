     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf             ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15 00000000 00000000                    numar dd 0
    16 00000004 256400                      format db "%d", 0
    17 00000007 257800                      afisare db "%x", 0
    18 0000000A 496E74726F64756365-         mesaj db "Introduceti numarul: ", 0
    18 00000013 7469206E756D617275-
    18 0000001C 6C3A2000           
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 68[0A000000]                    push mesaj
    25 00000005 FF15[00000000]                  call [printf]
    26 0000000B 83C404                          add esp, 4
    27                                          
    28 0000000E 68[00000000]                    push numar
    29 00000013 68[04000000]                    push format
    30 00000018 FF15[00000000]                  call [scanf]
    31 0000001E 83C408                          add esp, 4*2
    32                                          
    33 00000021 FF35[00000000]                  push dword[numar]
    34 00000027 68[07000000]                    push afisare
    35 0000002C FF15[00000000]                  call [printf]
    36 00000032 83C408                          add esp, 4*2
    37                                      
    38                                          ; exit(0)
    39 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
