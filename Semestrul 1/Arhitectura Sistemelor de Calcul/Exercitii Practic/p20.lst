     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  ; our data is declared here (the variables needed by our program)
    13                                  segment data use32 class=data
    14                                      ; ...
    15                                      ;Sa se citeasca de la tastatura in baza 16 doua numere a si b de tip dword si sa se afiseze suma partilor low si diferenta partilor high. Exemplu:
    16                                      ;a = 00101A35h, b = 00023219h
    17                                      ;suma = 4C4Eh
    18                                      ;diferenta = Eh
    19 00000000 00000000                    a dd 0
    20 00000004 00000000                    b dd 0
    21 00000008 613D00                      mesaj_a db "a=", 0
    22 0000000B 623D00                      mesaj_b db "b=", 0
    23 0000000E 257800                      format db "%x", 0
    24 00000011 73756D613D25780A0D-         sum db "suma=%x", 10, 13, 0
    24 0000001A 00                 
    25 0000001B 6469666572656E7461-         dif db "diferenta=%x", 0
    25 00000024 3D257800           
    26 00000028 00000000                    suma dd 0
    27 0000002C 00000000                    diferenta dd 0
    28                                  
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33 00000000 68[08000000]                    push mesaj_a
    34 00000005 FF15[00000000]                  call [printf]
    35 0000000B 83C404                          add esp, 4
    36                                          
    37 0000000E 68[00000000]                    push a
    38 00000013 68[0E000000]                    push format
    39 00000018 FF15[00000000]                  call [scanf]
    40 0000001E 83C408                          add esp, 4*2
    41                                          
    42 00000021 68[0B000000]                    push mesaj_b
    43 00000026 FF15[00000000]                  call [printf]
    44 0000002C 83C404                          add esp, 4
    45                                          
    46 0000002F 68[04000000]                    push b
    47 00000034 68[0E000000]                    push format
    48 00000039 FF15[00000000]                  call [scanf]
    49 0000003F 83C408                          add esp, 4*2
    50                                          
    51 00000042 66A1[00000000]                  mov AX, [a]
    52 00000048 668B15[02000000]                mov DX, [a+2]
    53 0000004F 668B1D[04000000]                mov BX, [b]
    54 00000056 668B0D[06000000]                mov CX, [b+2]
    55 0000005D 6601D8                          add AX, BX
    56 00000060 6629CA                          sub DX, CX
    57 00000063 66A3[28000000]                  mov [suma], AX
    58 00000069 668915[2C000000]                mov [diferenta], DX
    59                                          
    60 00000070 FF35[28000000]                  push dword[suma]
    61 00000076 68[11000000]                    push sum
    62 0000007B FF15[00000000]                  call [printf]
    63 00000081 83C408                          add esp, 4*2
    64                                          
    65 00000084 FF35[2C000000]                  push dword[diferenta]
    66 0000008A 68[1B000000]                    push dif
    67 0000008F FF15[00000000]                  call [printf]
    68 00000095 83C408                          add esp, 4*2
    69                                          
    70                                      
    71                                          ; exit(0)
    72 00000098 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    73 0000009A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
