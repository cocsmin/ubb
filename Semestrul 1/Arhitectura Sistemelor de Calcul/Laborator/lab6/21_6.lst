     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      ;Dandu-se un sir de cuvinte sa se obtina sirul (de octeti) cifrelor in baza zece ale fiecarui cuvant din acest sir.
    15 00000000 39302A51F411                sir dw 12345, 20778, 4596
    16                                      ; cifre = 1, 2, 3, 4, 5, 2, 0, 7, 7, 8, 4, 5, 9, 6
    17                                      L equ ($-sir)/2
    18 00000006 0A00                        zece dw 10
    19 00000008 00<rept>                    cifre times L*L db 0
    20                                      
    21                                  
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26 00000000 BE[00000000]                    mov ESI, sir
    27 00000005 BF[08000000]                    mov EDI, cifre
    28 0000000A B903000000                      mov ECX, L
    29                                          conversie:
    30 0000000F E32E                                jecxz final
    31 00000011 66AD                                lodsw 
    32 00000013 B305                                mov BL, 5 ; nr maxim de cifre
    33 00000015 B700                                mov BH, 0 ; nr real de cifre ale numarului
    34                                              ;mov [lung], BX
    35                                              cifra:
    36 00000017 66BA0000                                mov DX, 0
    37 0000001B 66F735[06000000]                        div word[zece]
    38 00000022 6652                                    push DX
    39 00000024 FEC7                                    inc BH
    40 00000026 6683F800                                cmp AX, 0
    41 0000002A 7407                                    je sari
    42 0000002C FECB                                    dec BL
    43 0000002E 80FB00                                  cmp BL, 0
    44 00000031 75E4                                    jne cifra
    45                                              sari:    
    46                                              ;mov BX, 5
    47                                              baga:
    48 00000033 6658                                    pop AX
    49 00000035 AA                                      stosb
    50 00000036 FECF                                    dec BH
    51 00000038 80FF00                                  cmp BH, 0
    52 0000003B 75F6                                    jne baga
    53                                          
    54 0000003D E2D0                            loop conversie
    55                                          final:
    56                                          ; exit(0)
    57 0000003F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 00000041 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
