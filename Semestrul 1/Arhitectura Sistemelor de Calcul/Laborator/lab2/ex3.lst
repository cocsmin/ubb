     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01                          a db 1
    15 00000001 02                          b db 2
    16 00000002 03                          c db 3
    17 00000003 0400                        d dw 4
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 668B15[03000000]                mov DX, [d]
    24 00000007 A0[00000000]                    mov AL, [a]
    25 0000000C 0205[01000000]                  add AL, [b]
    26 00000012 0402                            add AL, 2
    27 00000014 B403                            mov AH, 3
    28 00000016 F6E4                            mul AH
    29 00000018 6689C1                          mov CX, AX
    30 0000001B A0[02000000]                    mov AL, [c]
    31 00000020 0402                            add AL, 2
    32 00000022 80C405                          add AH, 5
    33 00000025 F6E4                            mul AH
    34 00000027 6629C1                          sub CX, AX
    35 0000002A 6629CA                          sub DX, CX
    36                                          
    37                                      
    38                                          ; exit(0)
    39 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    40 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
